{"version":3,"sources":["Pages/Home/HomePage.jsx","Pages/About/BioPage.jsx","Components/Navigation/DrawerToggle.jsx","Components/Navigation/ToggleSwitch.jsx","Components/Navigation/Navbar.jsx","Pages/Projects/projectCard.jsx","Pages/Projects/ProjectsPage.jsx","Pages/Contact/Contact.jsx","Components/Navigation/SideDrawer.jsx","Components/Navigation/Backdrop/Backdrop.jsx","App.js","serviceWorker.js","index.js"],"names":["calc","x","y","window","innerWidth","innerHeight","trans1","trans2","trans3","trans4","Home","useSpring","xy","config","mass","tension","friction","props","set","className","onMouseMove","clientX","clientY","div","style","transform","interpolate","About","src","alt","DrawerToggleButton","click","onClick","ToggleSwitch","handleThemeToggle","name","id","type","htmlFor","NavBar","sideDrawerOpen","scrollTo","drawerClick","darkMode","href","icon","ProjectCard","project","title","description","img_url","key","Portfolio","live","repo","map","Contact","handleInput","e","setState","target","value","handleButtonClick","location","state","message","email","console","log","this","onSubmit","preventDefault","required","placeholder","onChange","cols","rows","Component","SideDrawer","show","drawerClassNames","Backdrop","clicked","library","add","faGithub","faLinkedin","faCheckSquare","faCoffee","Landing","scrollToTop","scroll","drawerToggler","prevState","backDropClick","checked","document","body","scroller","duration","delay","smooth","backDrop","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0bAIMA,G,MAAO,SAACC,EAAGC,GAAJ,MAAU,CAACD,EAAIE,OAAOC,WAAa,EAAGF,EAAIC,OAAOE,YAAc,KACtEC,EAAS,SAACL,EAAGC,GAAJ,4BAAyBD,EAAI,GAA7B,cAAqCC,EAAI,GAAzC,UACTK,EAAS,SAACN,EAAGC,GAAJ,4BAAyBD,EAAI,EAAI,GAAjC,cAAyCC,EAAI,EAAI,IAAjD,UACTM,EAAS,SAACP,EAAGC,GAAJ,4BAAyBD,EAAI,EAAI,IAAjC,cAA0CC,EAAI,EAAI,IAAlD,UACTO,EAAS,SAACR,EAAGC,GAAJ,4BAAyBD,EAAI,IAA7B,cAAsCC,EAAI,IAA1C,UAmBAQ,EAjBF,WAAM,MAEMC,aAAU,iBAAO,CAAEC,GAAI,CAAC,EAAG,GAAIC,OAAQ,CAAEC,KAAM,GAAIC,QAAS,IAAKC,SAAU,SAFjF,mBAERC,EAFQ,KAEDC,EAFC,KAGf,OACI,yBAAKC,UAAU,YAEP,yBAAKA,UAAU,YAAYC,YAAa,gBAAYnB,EAAZ,EAAGoB,QAAqBnB,EAAxB,EAAeoB,QAAf,OAAgCJ,EAAI,CAAEN,GAAIZ,EAAKC,EAAGC,OACtF,kBAAC,IAASqB,IAAV,CAAcJ,UAAU,QAAQK,MAAO,CAAEC,UAAWR,EAAML,GAAGc,YAAYpB,MACzE,kBAAC,IAASiB,IAAV,CAAcJ,UAAU,QAAQK,MAAO,CAAEC,UAAWR,EAAML,GAAGc,YAAYnB,MACzE,kBAAC,IAASgB,IAAV,CAAcJ,UAAU,QAAQK,MAAO,CAAEC,UAAWR,EAAML,GAAGc,YAAYlB,MACzE,kBAAC,IAASe,IAAV,CAAcJ,UAAU,QAAQK,MAAO,CAAEC,UAAWR,EAAML,GAAGc,YAAYjB,SCW9EkB,G,MA5BD,WAEV,OACI,yBAAKR,UAAU,aACX,yBAAKA,UAAU,cACX,sCAGA,yBACIS,IAAI,8DACJC,IAAI,eACJV,UAAU,WAGlB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,WAAf,svBCfHW,G,MAAqB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjC,OACI,4BAAQZ,UAAU,gBAAgBa,QAASD,GACvC,yBAAKZ,UAAU,iBACf,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,oB,QCNdc,EAAe,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,kBAAmBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACpD,OACI,yBAAKjB,UAAU,iBACX,2BACIkB,KAAK,WACLlB,UAAU,yBACVgB,KAAMA,EACNC,GAAIA,EACJJ,QAASE,IAEb,2BAAOf,UAAU,sBAAsBmB,QAAQ,gBAC3C,0BAAMnB,UAAU,wBAChB,0BAAMA,UAAU,4BCPnBoB,EAAS,SAAC,GAA4E,IAA1EC,EAAyE,EAAzEA,eAAgBC,EAAyD,EAAzDA,SAAUC,EAA+C,EAA/CA,YAAuBR,GAAwB,EAAlCS,SAAkC,EAAxBT,mBAEtE,OACI,yBAAKf,UACDqB,EACM,gBACA,UAEN,yBAAKrB,UAAU,yBACX,kBAAC,EAAD,CAAoBY,MAAOW,KAE/B,wBAAIvB,UAAU,gBAAd,gBACA,yBAAKA,UAAU,oBAEX,yBAAKA,UAAU,eACX,4BAAQA,UAAU,aAAaa,QAASS,EAAUN,KAAK,QAAvD,QACA,4BAAQhB,UAAU,aAAaa,QAASS,EAAUN,KAAK,SAAvD,SACA,4BAAQhB,UAAU,aAAaa,QAASS,EAAUN,KAAK,aAAvD,YACA,4BAAQhB,UAAU,aAAaa,QAASS,EAAUN,KAAK,WAAvD,WACA,8BAEJ,yBAAKhB,UAAU,gBACX,kBAAC,EAAD,CAAce,kBAAmBA,EAAmBC,KAAM,eAAgBC,GAAI,kBAIlF,yBAAKjB,UAAU,kBACX,uBAAGyB,KAAK,gCACJ,kBAAC,IAAD,CAAiBzB,UAAU,iBAAiB0B,KAAM,CAAC,MAAO,aAE9D,uBAAGD,KAAK,4CACJ,kBAAC,IAAD,CAAiBzB,UAAU,oBAAoB0B,KAAM,CAAC,MAAO,mBCpCxEC,G,MAAc,SAAC,GAAkD,IAAD,IAA/CC,QAAWC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,QACzD,OACI,yBAAK/B,UAAU,eAAegC,IAAKH,GAC/B,2BAAIA,GACJ,2BAAIC,GACJ,yBAAKrB,IAAKsB,EAASrB,IAAKmB,OC6DrBI,EAhEG,WAkDd,OACI,yBAAKjC,UAAU,iBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,QAnDV,CACb,CACI6B,MAAM,WACNC,YAAY,oSAGZC,QAAQ,GACRG,KAAM,GACNC,KAAM,IAEV,CACIN,MAAM,SACNC,YAAY,OACZC,QAAQ,GACRG,KAAM,GACNC,KAAM,IAEV,CACIN,MAAM,UACNC,YAAY,IACZC,QAAQ,GACRG,KAAM,GACNC,KAAM,KA+BeC,KAAI,SAAAR,GAAO,OAAI,kBAAC,EAAD,CAAaA,QAASA,EAASI,IAAKJ,EAAQC,e,QC0B7EQ,G,kBAhFX,WAAYvC,GAAQ,IAAD,8BACf,4CAAMA,KASVwC,YAAc,SAAAC,GAAC,OAAI,EAAKC,SAAL,eAAiBD,EAAEE,OAAOzB,KAAOuB,EAAEE,OAAOC,SAV1C,EAkCnBC,kBAAoB,kBAAM3D,OAAO4D,SAASnB,KAAhB,wEAAwF,EAAKoB,MAAM7B,KAAnG,+CAA8I,EAAK6B,MAAMC,UA/B/K,EAAKD,MAAQ,CACT7B,KAAM,GACN+B,MAAO,GACPD,QAAS,IANE,E,sEAuCf,OAFAE,QAAQC,IAAIC,KAAKL,OAGb,yBAAK7C,UAAU,eACX,yBAAKA,UAAU,yBACX,0BAAMA,UAAU,UAAUmD,SAAU,SAAAZ,GAAC,OAAIA,EAAEa,kBAAkBC,UAAQ,GACjE,yBAAKrD,UAAU,cACX,2BACIgB,KAAK,OACLE,KAAK,OACLoC,YAAY,UACZC,SAAUL,KAAKZ,YACfI,MAAOQ,KAAKL,MAAM7B,KAClBqC,UAAQ,EACRrD,UAAU,4BAGlB,yBAAKA,UAAU,cACX,8BACIA,UAAU,0BACVgB,KAAK,UACLC,GAAG,UACHuC,KAAK,KACLC,KAAK,KACLH,YAAY,cACZC,SAAUL,KAAKZ,YACfI,MAAOQ,KAAKL,MAAMC,QAClBO,UAAQ,KAIhB,4BACIrD,UAAU,sBACVa,QAASqC,KAAKP,mBAFlB,iB,GArEFe,c,QCCTC,EAAa,SAAC,GAAqD,IAAnDrC,EAAkD,EAAlDA,SAAUsC,EAAwC,EAAxCA,KAAgB7C,GAAwB,EAAlCS,SAAkC,EAAxBT,mBAE/C8C,EAAmB,CAAC,eAMxB,OAJID,IACAC,EAAmB,SAInB,yBAAK7D,UAAW6D,GACZ,yBAAK7D,UAAU,kBACX,uBAAGyB,KAAK,gCACJ,kBAAC,IAAD,CAAiBzB,UAAU,iBAAiB0B,KAAM,CAAC,MAAO,aAE9D,uBAAGD,KAAK,4CACJ,kBAAC,IAAD,CAAiBzB,UAAU,oBAAoB0B,KAAM,CAAC,MAAO,gBAGrE,yBAAK1B,UAAU,eACX,4BAAQA,UAAU,aAAaa,QAASS,EAAUN,KAAK,QAAvD,QACA,4BAAQhB,UAAU,aAAaa,QAASS,EAAUN,KAAK,SAAvD,SACA,4BAAQhB,UAAU,aAAaa,QAASS,EAAUN,KAAK,aAAvD,YACA,4BAAQhB,UAAU,aAAaa,QAASS,EAAUN,KAAK,WAAvD,YAGJ,yBAAKhB,UAAU,gBACX,2BAAOuD,SAAUxC,EAAmBG,KAAK,gBC7B5C4C,G,MAAW,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OAAO,yBAAK/D,UAAU,WAAWa,QAASkD,M,gCCc9CC,IAAQC,IAAIC,IAAUC,IAAYC,IAAeC,K,IA0FlCC,E,2MAtFXzB,MAAQ,CACJxB,gBAAgB,EAChBG,UAAU,G,EAGd+C,YAAc,kBAAMC,gBAAOD,e,EAS3BE,cAAgB,WACZ,EAAKjC,UAAS,SAACkC,GACX,MAAO,CAAErD,gBAAiBqD,EAAUrD,oB,EAI5CsD,cAAgB,WACZ,EAAKnC,SAAS,CACVnB,gBAAgB,K,EAIxBN,kBAAoB,SAACwB,GACjB,EAAKC,SAAS,CAAEhB,SAAUe,EAAEE,OAAOmC,UAC/BrC,EAAEE,OAAOmC,QACTC,SAASC,KAAKzE,MAAQ,qBAEtBwE,SAASC,KAAKzE,MAAQ,6C,wEAxBrBkC,GACLwC,WAASzD,SAASiB,EAAEE,OAAOzB,KAAM,CAC7BgE,SAAU,IACVC,MAAO,EACPC,OAAQ,qB,+BAyBZ,IAAIC,EAOJ,OALIjC,KAAKL,MAAMxB,iBACX8D,EAAW,kBAAC,EAAD,CAAUpB,QAASb,KAAKyB,iBAKnC,yBAAK3E,UACDkD,KAAKL,MAAMrB,SACL,mBACA,WAEN,kBAAC,EAAD,CACIF,SAAU4B,KAAK5B,SACfsC,KAAMV,KAAKL,MAAMxB,eACjBG,SAAU0B,KAAKL,MAAMrB,SACrBT,kBAAmBmC,KAAKnC,oBAE3BoE,EACD,kBAAC,EAAD,CACI9D,eAAgB6B,KAAKL,MAAMxB,eAC3BC,SAAU4B,KAAK5B,SACfC,YAAa2B,KAAKuB,cAClBjD,SAAU0B,KAAKL,MAAMrB,SACrBT,kBAAmBmC,KAAKnC,oBAE5B,kBAAC,UAAD,CAASC,KAAK,OAAOhB,UAAU,YAC3B,kBAAC,EAAD,MACA,4BAAQgB,KAAK,aAAahB,UAAU,eAAea,QAASqC,KAAK5B,UAAjE,QAEJ,kBAAC,UAAD,CAASN,KAAK,aACV,kBAAC,EAAD,OAEJ,kBAAC,UAAD,CAASA,KAAK,SACV,kBAAC,EAAD,OAEJ,kBAAC,UAAD,CAASA,KAAK,WACV,kBAAC,EAAD,OAEJ,4BAAQhB,UAAU,2BAA2Ba,QAASqC,KAAKqB,aAA3D,kB,GA7EMb,a,QCRF0B,QACW,cAA7BpG,OAAO4D,SAASyC,UAEe,UAA7BrG,OAAO4D,SAASyC,UAEhBrG,OAAO4D,SAASyC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,IAAD,KACZ,kBAAC,EAAD,OACcX,SAASY,eAAe,SD0HpC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.ad124bd6.chunk.js","sourcesContent":["import React from 'react'\nimport { useSpring, animated } from 'react-spring'\nimport './homepage.css' // // Icons made by Freepik from www.flaticon.com\n\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2]\nconst trans1 = (x, y) => `translate3d(${x / 10}px,${y / 10}px,0)`\nconst trans2 = (x, y) => `translate3d(${x / 8 + 35}px,${y / 8 - 230}px,0)`\nconst trans3 = (x, y) => `translate3d(${x / 6 - 250}px,${y / 6 - 200}px,0)`\nconst trans4 = (x, y) => `translate3d(${x / 3.5}px,${y / 3.5}px,0)`\n\nconst Home = () => {\n    // const scrollPos = <ScrollPosition />\n    const [props, set] = useSpring(() => ({ xy: [0, 0], config: { mass: 10, tension: 550, friction: 140 } }))\n    return (\n        <div className='homePage'>\n            {\n                <div className=\"container\" onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y) })}>\n                    <animated.div className=\"card1\" style={{ transform: props.xy.interpolate(trans1) }} />\n                    <animated.div className=\"card2\" style={{ transform: props.xy.interpolate(trans2) }} />\n                    <animated.div className=\"card3\" style={{ transform: props.xy.interpolate(trans3) }} />\n                    <animated.div className=\"card4\" style={{ transform: props.xy.interpolate(trans4) }} />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Home","import React from 'react'\nimport './aboutPage.css'\n\nconst About = () => {\n\n    return (\n        <div className='aboutPage'>\n            <div className='page-title'>\n                <h2>About</h2>\n            </div>\n            {\n                <img\n                    src=\"https://avatars2.githubusercontent.com/u/52142269?s=460&v=4\"\n                    alt=\"Voniel Brown\"\n                    className='Voniel'\n                />\n            }\n            <div className='container'>\n                <div className='content'>\n                    Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Massa id neque aliquam vestibulum morbi blandit cursus risus.\n                    Enim facilisis gravida neque convallis a cras. Tincidunt nunc pulvinar sapien et. Tempus urna et pharetra pharetra massa. Ac turpis egestas sed tempus urna et.\n                    Id venenatis a condimentum vitae sapien pellentesque habitant morbi. Augue ut lectus arcu bibendum at.\n                    Tellus orci ac auctor augue mauris. Iaculis eu non diam phasellus vestibulum lorem. Volutpat est velit egestas dui id ornare arcu odio.\n                    A lacus vestibulum sed arcu non odio euismod lacinia at. Ac tortor vitae purus faucibus ornare suspendisse sed nisi lacus. Velit laoreet id donec ultrices tincidunt.\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default About","import React from 'react'\nimport './navigation.css'\n\nexport const DrawerToggleButton = ({ click }) => {\n    return (\n        <button className='toggle-button' onClick={click}>\n            <div className='toggler-line' />\n            <div className='toggler-line' />\n            <div className='toggler-line' />\n        </button>\n    )\n}","import React from \"react\";\n\nexport const ToggleSwitch = ({ handleThemeToggle, name, id }) => {\n    return (\n        <div className=\"toggle-switch\">\n            <input\n                type=\"checkbox\"\n                className=\"toggle-switch-checkbox\"\n                name={name}\n                id={id}\n                onClick={handleThemeToggle}\n            />\n            <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitch\">\n                <span className=\"toggle-switch-inner\" />\n                <span className=\"toggle-switch-switch\" />\n            </label>\n        </div>\n    );\n}\n\n\n","import React from 'react'\nimport { DrawerToggleButton } from './DrawerToggle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { ToggleSwitch } from './ToggleSwitch'\nimport './navigation.css'\n\n\nexport const NavBar = ({ sideDrawerOpen, scrollTo, drawerClick, darkMode, handleThemeToggle }) => {\n\n    return (\n        <div className={\n            sideDrawerOpen\n                ? 'navbar-hidden'\n                : 'navbar'\n        }>\n            <div className='sidebar-toggle-button'>\n                <DrawerToggleButton click={drawerClick} />\n            </div>\n            <h2 className='Voniel-Brown'>Voniel Brown</h2>\n            <div className='navigation-items'>\n\n                <div className='nav-buttons'>\n                    <button className='nav-button' onClick={scrollTo} name='home'>Home</button>\n                    <button className='nav-button' onClick={scrollTo} name='about'>About</button>\n                    <button className='nav-button' onClick={scrollTo} name='portfolio'>Projects</button>\n                    <button className='nav-button' onClick={scrollTo} name='contact' >Contact</button>\n                    <br />\n                </div>\n                <div className='toggleButton'>\n                    <ToggleSwitch handleThemeToggle={handleThemeToggle} name={'toggleSwitch'} id={'toggleSwitch'} />\n                </div>\n\n\n                <div className='external-links'>\n                    <a href=\"https://github.com/vonbarown\">\n                        <FontAwesomeIcon className='fa-icon github' icon={['fab', 'github']} />\n                    </a>\n                    <a href=\"https://www.linkedin.com/in/vonielbrown/\">\n                        <FontAwesomeIcon className='fa-icon linked-in' icon={['fab', 'linkedin']} />\n                    </a>\n                </div>\n\n            </div>\n\n        </div>\n    )\n}","import React from 'react'\n\nexport const ProjectCard = ({ project: { title, description, img_url } }) => {\n    return (\n        <div className='project-card' key={title}>\n            <p>{title}</p>\n            <p>{description}</p>\n            <img src={img_url} alt={title} />\n        </div>\n    )\n}","import React from 'react'\nimport './portfolio.css'\nimport { ProjectCard } from './projectCard'\n\nconst Portfolio = () => {\n\n    const projects = [\n        {\n            title: `Synergie`,\n            description: `Synergie is a full-stack react app, that allows users to keep track of their favorite shows.\n                        Allowing users to plan their binging sessions with their friends.We know that life can be busy, now you can keep track of the\n                        shows that you love.`,\n            img_url: ``,\n            live: '',\n            repo: ''\n        },\n        {\n            title: `fwrfgw`,\n            description: `just`,\n            img_url: ``,\n            live: '',\n            repo: ''\n        },\n        {\n            title: `fwrdfqd`,\n            description: `a`,\n            img_url: ``,\n            live: '',\n            repo: ''\n        },\n        // {\n        //     title: `fwrdgq`,\n        //     description: `mellow`,\n        //     img_url: ``,\n        //     live: '',\n        //     repo: ''\n        // },\n        // {\n        //     title: `fwrdgqdefq`,\n        //     description: `fellow`,\n        //     img_url: ``,\n        //     live: '',\n        //     repo: ''\n        // },\n        // {\n        //     title: `fwrdgdqqdefq`,\n        //     description: `just`,\n        //     img_url: ``,\n        //     live: '',\n        //     repo: ''\n        // },\n\n    ]\n\n    return (\n        <div className='portfolioPage'>\n            <div className='inner-frame'>\n                <div className='flex'>\n                    {\n                        projects.map(project => <ProjectCard project={project} key={project.title} />)\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Portfolio","import React, { Component } from 'react'\n// import axios from 'axios'\n\nimport './contact.css'\nclass Contact extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            name: '',\n            email: '',\n            message: ''\n        }\n    }\n\n    handleInput = e => this.setState({ [e.target.name]: e.target.value });\n\n\n    // handleSubmit = async e => {\n    //     e.preventDefault()\n    //     const { name, email, message } = this.state\n\n    //     try {\n    //         axios.post('http://localhost:8080/users/send',\n    //             {\n    //                 name,\n    //                 email,\n    //                 message\n    //             }\n    //         )\n\n    //         // console.log(mail);\n\n    //     } catch (error) {\n    //         console.log(error);\n\n    //     }\n    // }\n\n    handleButtonClick = () => window.location.href = `mailto:vonielbrown@pursuit.org?subject=New%20Message%20from%20${this.state.name}%20on%20Portfolio%20Website%20&body=${this.state.message}`\n\n    render() {\n        console.log(this.state);\n\n        return (\n            <div className='contactPage'>\n                <div className='contactPage-formField'>\n                    <form className='contact' onSubmit={e => e.preventDefault()} required>\n                        <div className='inputField'>\n                            <input\n                                name='name'\n                                type=\"text\"\n                                placeholder=' Name..'\n                                onChange={this.handleInput}\n                                value={this.state.name}\n                                required\n                                className='inputBar contact-input'\n                            />\n                        </div>\n                        <div className='inputField'>\n                            <textarea\n                                className='contact-input text-area'\n                                name=\"message\"\n                                id=\"message\"\n                                cols=\"30\"\n                                rows=\"10\"\n                                placeholder='Message....'\n                                onChange={this.handleInput}\n                                value={this.state.message}\n                                required\n                            >\n                            </textarea>\n                        </div>\n                        <button\n                            className='submit button-theme'\n                            onClick={this.handleButtonClick}\n                        >Submit\n                        </button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Contact","import React from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './navigation.css'\n\nexport const SideDrawer = ({ scrollTo, show, darkMode, handleThemeToggle }) => {\n\n    let drawerClassNames = ['side-drawer']\n\n    if (show) {\n        drawerClassNames = ' open'\n    }\n\n    return (\n        <div className={drawerClassNames}>\n            <div className='external-links'>\n                <a href=\"https://github.com/vonbarown\">\n                    <FontAwesomeIcon className='fa-icon github' icon={['fab', 'github']} />\n                </a>\n                <a href=\"https://www.linkedin.com/in/vonielbrown/\">\n                    <FontAwesomeIcon className='fa-icon linked-in' icon={['fab', 'linkedin']} />\n                </a>\n            </div>\n            <div className='nav-buttons'>\n                <button className='nav-button' onClick={scrollTo} name='home'>Home</button>\n                <button className='nav-button' onClick={scrollTo} name='about'>About</button>\n                <button className='nav-button' onClick={scrollTo} name='portfolio'>Projects</button>\n                <button className='nav-button' onClick={scrollTo} name='contact' >Contact</button>\n            </div>\n\n            <div className='toggleButton'>\n                <input onChange={handleThemeToggle} type=\"checkbox\" />\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport './backdrop.css'\nexport const Backdrop = ({ clicked }) => {\n    return <div className='backdrop' onClick={clicked} />\n}","import React, { Component } from 'react'\nimport Home from './Pages/Home/HomePage'\nimport About from './Pages/About/BioPage'\nimport { NavBar } from './Components/Navigation/Navbar'\n// import { Footer } from './Components/Navigation/Footer'\nimport Portfolio from './Pages/Projects/ProjectsPage'\nimport Contact from './Pages/Contact/Contact'\nimport { Element, animateScroll as scroll, scroller } from 'react-scroll'\nimport { SideDrawer } from './Components/Navigation/SideDrawer';\nimport { Backdrop } from './Components/Navigation/Backdrop/Backdrop'\nimport './App.css'\nimport { library } from '@fortawesome/fontawesome-svg-core'\n\nimport { faGithub, faLinkedin } from '@fortawesome/free-brands-svg-icons'\nimport { faCheckSquare, faCoffee } from '@fortawesome/free-solid-svg-icons'\n\n\nlibrary.add(faGithub, faLinkedin, faCheckSquare, faCoffee)\n\n\nclass Landing extends Component {\n    state = {\n        sideDrawerOpen: false,\n        darkMode: false\n    }\n\n    scrollToTop = () => scroll.scrollToTop();\n\n    scrollTo(e) {\n        scroller.scrollTo(e.target.name, {\n            duration: 800,\n            delay: 0,\n            smooth: 'easeInOutQuart'\n        })\n    }\n    drawerToggler = () => {\n        this.setState((prevState) => {\n            return { sideDrawerOpen: !prevState.sideDrawerOpen }\n        })\n    }\n\n    backDropClick = () => {\n        this.setState({\n            sideDrawerOpen: false\n        })\n    }\n\n    handleThemeToggle = (e) => {\n        this.setState({ darkMode: e.target.checked })\n        if (e.target.checked) {\n            document.body.style = 'background  black;'\n        } else {\n            document.body.style = 'background: white; transition: 0.5s ease;';\n        }\n    }\n\n    render() {\n        let backDrop;\n\n        if (this.state.sideDrawerOpen) {\n            backDrop = <Backdrop clicked={this.backDropClick} />\n\n        }\n\n        return (\n            <div className={\n                this.state.darkMode\n                    ? 'landing darkMode'\n                    : 'landing'\n            }>\n                <SideDrawer\n                    scrollTo={this.scrollTo}\n                    show={this.state.sideDrawerOpen}\n                    darkMode={this.state.darkMode}\n                    handleThemeToggle={this.handleThemeToggle}\n                />\n                {backDrop}\n                <NavBar\n                    sideDrawerOpen={this.state.sideDrawerOpen}\n                    scrollTo={this.scrollTo}\n                    drawerClick={this.drawerToggler}\n                    darkMode={this.state.darkMode}\n                    handleThemeToggle={this.handleThemeToggle}\n                />\n                <Element name='home' className='homePage'>\n                    <Home />\n                    <button name='portfolio ' className='button-theme' onClick={this.scrollTo}>\\/</button>\n                </Element>\n                <Element name='portfolio'>\n                    <Portfolio />\n                </Element>\n                <Element name='about'>\n                    <About />\n                </Element>\n                <Element name='contact'>\n                    <Contact />\n                </Element>\n                <button className='scrollToTop button-theme' onClick={this.scrollToTop}>Scroll Up</button>\n                {\n\n                    // <Footer />\n                }\n            </div >\n        )\n    }\n}\n\nexport default Landing","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter>\n    <App />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}